<?xml version="1.0" encoding="UTF-8"?>
<!--
   Data Hub Service (DHuS) - For Space data distribution.
   Copyright (C) 2013,2014,2015 GAEL Systems

   This file is part of DHuS software sources.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as
   published by the Free Software Foundation, either version 3 of the
   License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
   xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<context:component-scan base-package="fr.gael.dhus.database" />

   <bean id="dbcp2DataSource" class="org.apache.commons.dbcp2.BasicDataSource">
      <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
      <property name="url" value="jdbc:hsqldb:file:#{ configurationLoader.getDatabasePath () };shutdown=true;#{ configurationLoader.getDatabaseSettings () }" />
      <property name="username" value="sa" />
      <property name="password" value="" />
        
      <property name="maxTotal" value="-1" />
      <property name="maxIdle" value="-1" />
      <property name="maxWaitMillis" value="10000" /> <!-- wait only 10s -->
      <property name="maxConnLifetimeMillis" value="20000" /> <!-- minimize lifetime of a connection -->
   </bean>
    
   <bean id="boneCPDataSource" class="com.jolbox.bonecp.BoneCPDataSource">
      <property name="driverClass" value="org.hsqldb.jdbcDriver" />
      <property name="jdbcUrl" value="jdbc:hsqldb:file:#{ configurationLoader.getDatabasePath () };shutdown=true;#{ configurationLoader.getDatabaseSettings () }" />
      <property name="username" value="sa" />
      <property name="password" value="" />

      <property name="idleConnectionTestPeriodInMinutes" value="60"/>
      <property name="idleMaxAgeInMinutes" value="240"/>      
      <property name="maxConnectionsPerPartition" value="60"/>
      <property name="minConnectionsPerPartition" value="20"/>
      <property name="partitionCount" value="3"/>
      <property name="acquireIncrement" value="10"/>                              
      <property name="statementsCacheSize" value="50"/>
   </bean>
   
   <!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
   <bean id="dataSource"
      class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
      <property name="targetDataSource" ref="boneCPDataSource" />
   </bean>   
    
    
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource" ref="dataSource" />
		<property name="changeLog"
			value="classpath:liquibase/changelog-master.xml" />
	</bean>
   
	<bean id="sessionFactory" depends-on="liquibase"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>fr.gael.dhus.database.object</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
            <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            <prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>

	<!-- Listeners -->
	<bean id="saveEventListener" parent="callbackHandlerEventListener"
		class="org.hibernate.ejb.event.EJB3SaveEventListener" />
	<bean id="flushEntityEventListener" parent="callbackHandlerEventListener"
		class="org.hibernate.ejb.event.EJB3FlushEntityEventListener" />
	<bean id="postLoadEventListener" parent="callbackHandlerEventListener"
		class="org.hibernate.ejb.event.EJB3PostLoadEventListener" />		
	<bean id="entityCallbackHandler" class="org.hibernate.ejb.event.EntityCallbackHandler" />
	<bean id="callbackHandlerEventListener" abstract="true"
		class="org.hibernate.ejb.event.CallbackHandlerConsumer">
		<property name="callbackHandler" ref="entityCallbackHandler" />
	</bean>
   
   <bean id="transactionManager"
      class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="dataSource" ref="dataSource" />
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   <tx:annotation-driven />
   
</beans>
